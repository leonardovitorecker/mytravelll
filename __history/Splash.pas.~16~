unit Splash;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes,
  System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, REST.Types,
  FMX.Objects, REST.Client, Data.Bind.Components, Data.Bind.ObjectScope,
  FMX.Layouts, FMX.Controls.Presentation, FMX.StdCtrls, System.JSON;
type
  TVersao = class(TForm)
    LayoutFundo: TLayout;
    LayoutUpdate: TLayout;
    RESTClient1: TRESTClient;
    RESTRequest1: TRESTRequest;
    RESTResponse1: TRESTResponse;
    Image1: TImage;
    RoundRect1: TRoundRect;
    LabelBaixar: TLabel;
    Image2: TImage;
    procedure FormShow(Sender: TObject);
    procedure RoundRect1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
   
  
  private
    procedure OnFinishUpdate(Sender: TObject);
    { Private declarations }
  public
   versao_app: string;
    versao_server: string;
    { Public declarations }
  end;

var
  Versao: TVersao;

implementation

uses CadastroUsuario, UOpenURL;
{$R *.fmx}

procedure TVersao.RoundRect1Click(Sender: TObject);
var url: string;
 begin
{$IFDEF ANDROID}
 url:='https://drive.google.com/drive/my-drive=sharing';
 {$ELSE}
 url:= 'https://drive.google.com/drive/my-drive=sharing';
 {$ENDIF}
 OpenURL(url, False);
 Application.Terminate;
 end;


procedure TVersao.FormCreate(Sender: TObject);
begin
     versao_app := '1,2';
   versao_server := '0,0'
end;

procedure TVersao.FormShow(Sender: TObject);
var
t: TThread;
begin
t:= TThread.CreateAnonymousThread(
procedure
var
JsonObj: TJSONObject;
begin
  sleep(2000);
  try
    RESTRequest1.Execute;
    except
    on ex: Exception do
    begin
      raise Exception.Create('Error ao acessar o servidor' + ex.Message);
   exit;
   end;
    end;
    try
    JsonObj := TJSONObject.ParseJSONValue(TEncoding.ASCII.GetBytes(
    RESTRequest1.Response.JSONValue.ToString),0) as TJSONObject;

    versao_server := TJSONObject(JsonObj).GetValue('Versao').Value;
   
  finally
  JsonObj.DisposeOf;

  end;
end);
 t.Onterminate := OnFinishUpdate;
 t.Start;
 end;

 procedure Image2Click(Sender: TObject);
 begin
   FormCadastro.Show();
   FormCadastro.CTabActionProximo.Execute;
 end;



procedure TVersao.OnFinishUpdate(Sender: TObject);
begin

  if Assigned(TThread(Sender).FatalException) then
  begin
    showmessage(Exception(TThread(Sender).FatalException).Message);
    exit;
  end;

  if versao_server < versao_app then
  begin
    LayoutFundo.Visible := False;
    LayoutUpdate.Visible := True;

      if not Assigned(FormCadastro) then
      Application.CreateForm(TFormCadastro, FormCadastro);
     FormCadastro.show();
     FormCadastro.CTabActionProximo.Execute;

    end;
  end;
end;

end.
